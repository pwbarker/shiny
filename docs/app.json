[{"name":"app.R","content":"#install.packages(\"shinyjs\")\r\n#install.packages(\"bslib\", dependencies=TRUE)\r\n#install.packages(\"fastmap\")\r\nlibrary(bslib)\r\nlibrary(shiny)\r\nlibrary(ggplot2)\r\nlibrary(shinyjs)\r\nlibrary(DT)\r\nlibrary(dplyr)\r\n\r\n\r\n#setwd(\"C:/Users/Jordan.Everson/OneDrive - HHS Office of the Secretary/Documents/interop composite/Interop App\")\r\n\r\nsource(\"graphs.R\")\r\nhello_world()\r\n\r\n##Load Data\r\nload(\"data/trend_df.RData\")\r\nload(\"data/histogram_df.RData\")\r\nload(\"data/index_items_df.RData\")\r\n\r\n##Load Crosswalks\r\nIndex<-c(\"Core\",\"Core\", \"Core\", \"Core\",\"Pathfinder\", \"Pathfinder\", \"Pathfinder\", \"Pathfinder\", \"Pathfinder\",\"Friction\", \"Friction\",\"Friction\",\"Friction\")\r\nLabel<-c(\"Composite\",\"Clinical Interoperability\", \"Data Availability & Use\", \"Breadth\", \"Composite\",\"Clinician/Health System API\", \"Patient Engagement\", \"Social Determinants of Health\", \"Public Health\", \"Composite\",\"Barriers to Exchange\", \"Multiple Methods to Exchange\", \"Information Blocking\")\r\nComponent<-c(\"Composite\",\"ClinInteropFx\", \"DataUse\", \"breadth_of_exchange\", \"Composite\",\"API\", \"PatientEngagement\", \"SDOH\", \"PublicHealth\", \"Composite\",\"Barriers\", \"Methods\", \"InfoBlocking\")\r\nIndexComponent<-data.frame(Index,Component, Label)\r\n\r\n\r\ndfItem <- dfItem %>%\r\n  rename(\"Year\" = year,\r\n         \"Find Data Electronically\" = Find,\r\n         \"Send Data Electronically\" = Send,\r\n         \"Receive Data Electronically\" = Receive,\r\n         \"Integrate Data without Manual Effort\" = Integrate,\r\n         \"Information Available to Clinicians\" = Available,\r\n         \"Information Used by Clinicians\" = Used,\r\n         \"Syndromic Surveillance Reporting by EHR / HIE\" = PH_SS,\r\n         \"Immunization Data Reporting by EHR / HIE\" = PH_IRR,\r\n         \"Electronic Case Reporting by EHR / HIE\" = PH_ECR,\r\n         \"Public Health Registry Reporting by EHR / HIE\" = PH_PHR,\r\n         \"Clinical Registry Reporting by EHR / HIE\" = PH_CDR,\r\n         \"Electronic Lab Result Reporting by EHR / HIE\" = PH_ERL,\r\n         \"Hospital Capacity Reporting by EHR / HIE\" = PH_HCR,\r\n         \"Enable Patient Information Downloading\" = PE_Download,\r\n         \"Enable Patient Information Importing\" = PE_Import,\r\n         \"Enable Sending Patient Information\" = PE_Send,\r\n         \"Enable Patient Access to Apps via APIs\" = PE_API,\r\n         \"Enable Patient Access to Apps via FHIR\" = PE_FHIR,\r\n         \"Enable Submission of Patient Generated Data via FHIR\" = PE_PGHDFHIR,\r\n         \"Send Hospitals Information\" = HospitalSend,\r\n         \"Receive Information from Hospitals\" = HospitalReceive,\r\n         \"Send Ambulatory Providers Information\" = AmbSend,\r\n         \"Receive Information from Ambulatory Providers\" = AmbReceive,\r\n         \"Send Long-term Care Patient Information\" = LTPACSend,\r\n         \"Receive Information from Long-term Care\" = LTPACReceive,\r\n         \"Send Behavioral Health Patient Information\" = BHSend,\r\n         \"Receive Information from Behavioral Health\" = BHReceive,\r\n         \"Barriers to Receiving Information\" = Barrier_Receive,\r\n         \"Barriers to Sending Information\" = Barrier_Send,\r\n         \"Other Barriers to Exchange\" = Barrier_Other,\r\n         \"Numerous Methods to Find Information\" = MFind,\r\n         \"Numerous Methods to Send Information\" = MSend,\r\n         \"Numerours Methods to Receive Information\" = MReceive,\r\n         \"Receive SDoH Information from Other Organizations\" = SDOH_Received,\r\n         \"Use SDoH Information from Other Organizations for Individual Care\"=SDOH_Used_Ind,\r\n         \"Use SDoH Information from Other Organizations for Population Health\"=SDOH_Used_Pop,\r\n         \"Provide EHR Data to Third-Party Apps - Clinical\" = API_SendEHR_clin,\r\n         \"Integrate Third-Party Data into EHR - Clinical\" = API_Integrate_clin,\r\n         \"Provide EHR Data to Third-Party Apps - Administrative\" = API_SendEHR_admin,\r\n         \"Integrate Third-Party Data into EHR - Administrative\" = API_Integrate_admin,\r\n         \"Experience Information Blocking by EHR Developers\"=IB_Extant_EHR,\r\n         \"Experience Information Blocking by Healthcare Providers\"=IB_Extant_Prov,\r\n         \"Experience Information Blocking by Health Information Networks\"=IB_Extant_HIE)\r\n\r\nitemComponentCrossWalk <- data.frame(item = colnames(dfItem), stringsAsFactors = FALSE)\r\n\r\nitemComponentCrossWalk$component<-c(\r\n  \"Clinical Interoperability\",\"Clinical Interoperability\",\"Clinical Interoperability\",\"Clinical Interoperability\",\r\n  \"Data Availability & Use\",\"Data Availability & Use\",\r\n  \"Patient Engagement\",\"Patient Engagement\",\"Patient Engagement\",\"Patient Engagement\",\"Patient Engagement\",\r\n  \"Public Health\",\"Public Health\",\"Public Health\",\"Public Health\",\"Public Health\",\"Public Health\",\"Public Health\",\r\n  \"Barriers to Exchange\",\"Barriers to Exchange\",\"Barriers to Exchange\",\r\n  \"Multiple Methods to Exchange\",\"Multiple Methods to Exchange\",\"Multiple Methods to Exchange\",\r\n  \"Information Blocking\",\"Information Blocking\",\"Information Blocking\",\r\n  \"None\",\"None\",\"None\",\r\n  \"Breadth\", \"Breadth\", \"Breadth\", \"Breadth\", \"Breadth\", \"Breadth\", \"Breadth\", \"Breadth\",\r\n  \"Patient Engagement\",\r\n  \"Social Determinants of Health\", \"Social Determinants of Health\", \"Social Determinants of Health\", \r\n  \"Clinician/Health System API\",\"Clinician/Health System API\",\"Clinician/Health System API\",\"Clinician/Health System API\"\r\n)\r\n\r\n\r\n\r\n\r\nitemComponentCrossWalk$index<-c(\r\n  \"Core\",\"Core\",\"Core\",\"Core\",\r\n  \"Core\",\"Core\",\r\n  \"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\r\n  \"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\r\n  \"Friction\",\"Friction\",\"Friction\",\r\n  \"Friction\",\"Friction\",\"Friction\",\r\n  \"Friction\",\"Friction\",\"Friction\",\r\n  \"None\",\"None\",\"None\",\r\n  \"Core\", \"Core\", \"Core\", \"Core\", \"Core\", \"Core\", \"Core\", \"Core\",\r\n  \"Pathfinder\",\r\n  \"Pathfinder\", \"Pathfinder\", \"Pathfinder\", \r\n  \"Pathfinder\",\"Pathfinder\",\"Pathfinder\",\"Pathfinder\"\r\n)\r\n\r\n\r\n\r\n\r\nui <- page_sidebar(\r\n  shinyjs::useShinyjs(), # newly added\r\n  tags$head(\r\n    tags$style(HTML(\"\r\n      .shiny-options-group label {\r\n        font-size: 14px;  /* Adjust this size as needed */\r\n      }\r\n    \"))\r\n  ),\r\n  # App title ----\r\n  title = \"Hospital Interoperability Index\",\r\n  # Sidebar panel for inputs ----\r\n  sidebar = sidebar(\r\n    selectInput(\r\n      \"index\",\r\n      \"Select Index\",\r\n      choices = list(\"Overall\" = \"Overall\", \"Core\" = \"Core\", \"Pathfinder\" = \"Pathfinder\", \"Friction\" = \"Friction\"),\r\n      selected = 1\r\n    ),\r\n\r\n  radioButtons(\r\n    \"comparison\",\r\n    \"Comparison\",\r\n    choices = list(\"Across Index Components\" = 1, \"By Hospital Characteristic\" = 2, \"Individual Index Items\" = 3)\r\n  ),\r\n  radioButtons(\r\n    \"graphType\",\r\n    \"Graph Type\",\r\n    choices = list(\"Trend over time\" = 1, \"Current distribution\" = 2)\r\n  ),\r\n  selectInput(\r\n    \"component\",\r\n    \"Component\",\r\n    choices = list(\"Clinical Interop\" = \"ClinInteropFx\", \"Information Blocking\" = \"InfoBlocking\", \"SDOH\" = \"SDOH\", \"Choice 3\" = 3),\r\n    selected = 1\r\n  ),\r\n  selectInput(\r\n    \"characteristic\",\r\n    \"Hospital Characteristic\",\r\n    choices = list(\"Overall\" = \"Overall\", \"Size\" = \"hospSize\", \"Critical Access Hospital\" = \"cah\", \"Hospital System Member\" = \"sysMemb\", \"Location\" = \"cbsatype\", \"EHR\" = \"ehr\"),\r\n    selected = 1\r\n  ),\r\n  tags$script(HTML(\"\r\n    Shiny.addCustomMessageHandler('disableSelect', function(value) {\r\n      $('#characteristic').prop('disabled', value);\r\n    });\r\n  \"))\r\n  ),\r\n  uiOutput(\"mainOutput\", height = \"600px\", width = \"100%\")\r\n)\r\n\r\nserver <- function(input, output, session) {\r\n  \r\n  session$sendCustomMessage(\"disableSelect\", TRUE)\r\n\r\n    limitComponent <- reactive({\r\n    subsetComponent <- subset(IndexComponent, IndexComponent$Index==input$index)\r\n    return(c(\"Choose One\" = \"\", unique(as.character(subsetComponent$Label))))\r\n  })\r\n\r\n  observeEvent(input$comparison, {\r\n    if (input$comparison == \"1\") {\r\n      shinyjs::disable('characteristic') \r\n      shinyjs::disable('component') \r\n      indexChoices<-list(\"Overall\" = \"Overall\", \"Core\" = \"Core\", \"Pathfinder\" = \"Pathfinder\", \"Friction\" = \"Friction\")\r\n      current_selection <- input$index\r\n      updateSelectInput(session,\"index\", choices = indexChoices,\r\n                        selected = if (current_selection %in% indexChoices) current_selection else \"Core\")\r\n      \r\n      characteristicChoices<-list(\"Overall\"=\"Overall\", \"Size\" = \"hospSize\", \"Critical Access Hospital\" = \"cah\", \"Hospital System Member\" = \"sysMemb\", \"Location\" = \"cbsatype\", \"EHR\" = \"ehr\")\r\n      current_selection <- input$characteristic\r\n      valid_choices <- characteristicChoices[characteristicChoices != \"\"]\r\n      updateSelectInput(session,\"characteristic\", choices = characteristicChoices,\r\n                        selected = if (current_selection %in% characteristicChoices) current_selection else \"hospSize\")\r\n      \r\n      \r\n    } else if (input$comparison == \"2\") {\r\n      if(input$index==\"Overall\") {\r\n        updateSelectInput(session, \"index\", \r\n                        selected = \"Core\")\r\n      } \r\n      \r\n      #Update Index based on comparison type - exclude \"Overall\" for comparison across hospital characteristics.\r\n      \r\n      indexChoices<-list(\"Core\" = \"Core\", \"Pathfinder\" = \"Pathfinder\", \"Friction\" = \"Friction\")\r\n      current_selection <- input$index\r\n      valid_choices <- indexChoices[indexChoices != \"\"]\r\n      updateSelectInput(session,\"index\", choices = indexChoices,\r\n                        selected = if (current_selection %in% indexChoices) current_selection else \"Core\")\r\n      \r\n      characteristicChoices<-list(\"Size\" = \"hospSize\", \"Critical Access Hospital\" = \"cah\", \"Hospital System Member\" = \"sysMemb\", \"Location\" = \"cbsatype\", \"EHR\" = \"ehr\")\r\n      current_selection <- input$characteristic\r\n      valid_choices <- characteristicChoices[characteristicChoices != \"\"]\r\n      updateSelectInput(session,\"characteristic\", choices = characteristicChoices,\r\n                        selected = if (current_selection %in% characteristicChoices) current_selection else \"hospSize\")\r\n      \r\n      shinyjs::enable('characteristic') \r\n      shinyjs::enable('component')\r\n    } \r\n    else if(input$comparison==\"3\") {\r\n      shinyjs::enable('characteristic') \r\n      shinyjs::enable('component')    \r\n      \r\n      indexChoices<-list(\"Overall\" = \"Overall\", \"Core\" = \"Core\", \"Pathfinder\" = \"Pathfinder\", \"Friction\" = \"Friction\")\r\n      current_selection <- input$index\r\n      valid_choices <- indexChoices[indexChoices != \"\"]\r\n      \r\n      updateSelectInput(session,\"index\", choices = indexChoices,\r\n                        selected = if (current_selection %in% indexChoices) current_selection else \"Core\")\r\n      \r\n      characteristicChoices<-list(\"Overall\"=\"Overall\", \"Size\" = \"hospSize\", \"Critical Access Hospital\" = \"cah\", \"Hospital System Member\" = \"sysMemb\", \"Location\" = \"cbsatype\", \"EHR\" = \"ehr\")\r\n      current_selection <- input$characteristic\r\n      valid_choices <- characteristicChoices[characteristicChoices != \"\"]\r\n      updateSelectInput(session,\"characteristic\", choices = characteristicChoices,\r\n                        selected = if (current_selection %in% characteristicChoices) current_selection else \"hospSize\")\r\n      \r\n    } \r\n  })\r\n\r\n  observe({\r\n\r\n    # 1. When comparison is changed to 1, update graphType to 1\r\n    observeEvent(input$comparison, {\r\n      if (input$comparison == 1 && input$graphType != 1) {\r\n        updateRadioButtons(session, \"graphType\", selected = 1)\r\n      }\r\n    })\r\n    \r\n    # 2. When graphType is changed to 2, update comparison to 2\r\n    observeEvent(input$graphType, {\r\n      if (input$graphType == 2 && input$comparison != 2) {\r\n        updateRadioButtons(session, \"comparison\", selected = 2)\r\n      }\r\n    })\r\n    \r\n    # Update Component choices based on Index\r\n    choices <- limitComponent()\r\n    # Remove the empty choice (if present)\r\n    valid_choices <- choices[choices != \"\"]\r\n    # Automatically select the first valid option\r\n    first_choice <- if (length(valid_choices) > 0) valid_choices[1] else \"\"\r\n    \r\n    updateSelectInput(session, \"component\", choices = choices,\r\n                      selected = first_choice)\r\n    \r\n\r\n  })\r\n  \r\n  output$mainOutput <- renderUI({\r\n    if (input$comparison == 3) {\r\n      DT::dataTableOutput(\"summaryTable\")\r\n    } else {\r\n      plotOutput(\"distPlot\", height=\"600px\")\r\n    }\r\n  })\r\n  \r\n  output$distPlot <- renderPlot({\r\n    \r\n    getComponent <- function(index, label) {\r\n      if (label == \"Composite\" || label == \"\") {\r\n        return(ifelse(index == \"Pathfinder\", \"CorePlus\", index))\r\n      }\r\n      \r\n      matched <- IndexComponent$Component[IndexComponent$Label == label]\r\n      if (length(matched) == 0 || is.na(matched)) return(\"Core\")\r\n      \r\n      return(matched)\r\n    }\r\n    \r\n    if (input$graphType == 1) {\r\n      # Index Comparison\r\n      if (input$comparison == 1) {\r\n        trendline(input$index, combineddf, IndexComponent)\r\n        \r\n        # Characteristic Comparison\r\n      } else if (input$comparison == 2) {\r\n        component <- getComponent(input$index, input$component)\r\n        trendline_characteristic(input$index, component, input$characteristic, combineddf, IndexComponent)\r\n      }\r\n      \r\n    } else if (input$graphType == 2) {\r\n      component <- getComponent(input$index, input$component)\r\n      distribution(component, input$characteristic, distributionSummaryFinal, IndexComponent)\r\n    }\r\n    \r\n  })\r\n  \r\n  output$summaryTable <- renderDT({\r\n    req(input$comparison == 3)\r\n    \r\n    df <- dfItem\r\n    \r\n    #Round numeric cells to 2 digits.\r\n    num_cols <- sapply(df, is.numeric)\r\n    df[num_cols] <- lapply(df[num_cols], function(x) round(x, 2))\r\n    \r\n    # Filter rows by hospital characteristic\r\n    df <- df[df$characteristic==input$characteristic, ]\r\n    \r\n    if(input$component==\"Composite\") {\r\n      cols_to_select <- itemComponentCrossWalk$item[itemComponentCrossWalk$index == input$index]\r\n    }else if(input$index==\"Overall\") {\r\n      cols_to_select<-itemComponentCrossWalk$item\r\n    }\r\n      else {\r\n      cols_to_select <- itemComponentCrossWalk$item[itemComponentCrossWalk$component == input$component]\r\n    }\r\n    \r\n\r\n    \r\n    # Add additional columns to keep\r\n    cols_to_keep <- c(\"Year\", \"characteristic\", \"char_value\", cols_to_select)\r\n    \r\n    # Select those columns from dfItem\r\n    df <- select(df, all_of(cols_to_keep))\r\n    \r\n    #Reorder columns\r\n    df <- df %>%\r\n      arrange(characteristic, char_value, Year)\r\n    \r\n    # Define the desired order of first columns\r\n    first_cols <- c(\"char_value\",\"Year\")\r\n    \r\n    # Keep only columns that exist in df to avoid errors\r\n    first_cols <- first_cols[first_cols %in% colnames(df)]\r\n\r\n    # Put those first, then all other columns\r\n    df <- df[, c(first_cols, setdiff(colnames(df), first_cols))]\r\n    df <- select(df, -characteristic)\r\n    \r\n    if(input$characteristic==\"hospSize\")\r\n    {\r\n      df$char_value[df$char_value==\"0\"]<-\"Small\"\r\n      df$char_value[df$char_value==\"1\"]<-\"Medium\"\r\n      df$char_value[df$char_value==\"2\"]<-\"Large\"\r\n      \r\n      df<- df %>% rename(\"Hospital Size\" = char_value)\r\n    } else if (input$characteristic==\"cah\") {\r\n      df$char_value[df$char_value==\"0\"]<-\"No\"\r\n      df$char_value[df$char_value==\"1\"]<-\"Yes\"\r\n      df<- df %>% rename(\"Critical Access Status\" = char_value)\r\n    } else if (input$characteristic==\"sysMemb\") {\r\n      df<- df %>% rename(\"Health System Member\" = char_value)\r\n      df$char_value[df$char_value==\"0\"]<-\"No\"\r\n      df$char_value[df$char_value==\"1\"]<-\"Yes\"\r\n    } else if (input$characteristic==\"cbsatype\") {\r\n      df<- df %>% rename(\"Location\" = char_value)\r\n    } else if (input$characteristic==\"ehr\") {\r\n      df<- df %>% rename(\"EHR\" = char_value)\r\n    }\r\n    \r\n    \r\n    \r\n    datatable(df, options = list(pageLength = 25, scrollX = TRUE,columnDefs = list(list(className = 'dt-center', targets = \"_all\"))))\r\n  })\r\n  \r\n}\r\n\r\nshinyApp(ui = ui, server = server)\r\n","type":"text"},{"name":"data/distribution_df.RData","content":"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\nY80AAA==","type":"binary"},{"name":"data/histogram_df.RData","content":"H4sIAAAAAAAABu1dBVxWzdIHwS7sQkXFVkQssHZQQAGBhxJFVEIUpMMu7FYURDCQEgUUaQGJ\nhxBEQbGwULG7u78Hnp3jy0Euvuq9L/d+e37izOzO7s7Zs/uf2TkHNVCbMKDehHoSEhJSEtJS\nUhJSNUWsRE1jI42+yhIS0jVEgqSEtERdEW09zdbN3dXWcpa7rZOj4SwHBwvXeRq2jhb2orbN\nRPV1JWpIyEhI1HGk+nVGWbi62lq7ujGZyUxmMpOZzGQmM/mPyM0sXa0tprnbTHWaPtV6rpWN\nheMMa1bFqlgVq2JVrIpVsSpWxapYFatiVayKVVX3qoaj7W0dNR3drV2dnDXmskJWyApZIStk\nhayQFbJCVsgKWeHPFkqPdnK1ZjzjGc94xjP+/ylfW83C3cLYjYlMZCITmchEJjLxv1Cso+Fq\na1X621dMZjKTmcxkJjOZyUz+I3IDTcfpTqPsnazsbB1nsDJWxspYGStjZayMlbEyVsbKqmVZ\nbR1rdxunaW5MZCITmchEJjKRif99opSqQJOxjGUsYxnL2H8/W6f0S2mB/Sw3JjOZyUxmMpOZ\nzGQm/xG5icDC3dba0V3dcYbFDGsHEccqWAWrYBWsglWwClbBKlgFq2AVrIJV/FMVDQSzLO1t\nrcZaW9i727AyVsbKWBkrY2WsjJWxMlbGyqplmbShmt5YxjOe8YxnPOP/v/KlX11Qnv+vuvzw\nH8fn/8t6vP9bm/drGT/6pdN/8f94MWuYNcwaZg2zhlnDrGHW/L41/K9Kf5QLqPTl3l9+2+ev\nMRPrk/XJ+mR9/m/3WUNCRtQlIreUlYXN/ypbx8rSzcJ9nrM1k/8nZSlrG1fGMvZfs3VsnNyc\nDW3nWzP5f1Ku7TbPTcfawZKJVYvVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4V\nuTr4EsZWd/af9kZMZt6+uojVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4VuTr4\nEsZWd/af9kZMZt6+uojVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4VuTr4EsZW\nd/af9kZMZt6+uojVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4VuTr4EsZWd/af\n9kZMZt6+uojVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4VuTr4EsZWd/af9kZM\nZt6+uojVwSszb8/kX5Grgy9hbHVn/2lvxGTm7auLWB28MvP2TP4VuTr4EsZWd/af9kZMZt6+\n2oh6s61dLezt/9NidYgG/lbkUM3W+P87uZpFGv/f5OoCV/+xU1A1iFMY+/fZ/1oX9Y8DLAP0\nfy+AOti4OfwFbqqHWB22bLVhy/9/kZKK/zam/7+Lqalj7e7q9M8Ktlb/sGAwSwTi/6RQa7S1\nq6O1a7WQGowWGGr2U59tO+37f5T631gmre5sa/UP8HV0rKfZultb2VRTuaaeuw33sP8R4b8R\nJyWV/m3Mf+Ns/BfazDwd83TM0/1J/p/2ZMzT/VsY5umYp2Oejnm6aljGPN2PZebpfolhno55\nOubpmKerhmXM0/1YZp7ulxjm6ZinY56OebpqWMY83Y9l5ul+iWGejnk65umYp6uGZczT/Vhm\nnu6XGObpmKdjno55umpYxjzdj2Xm6X6JYZ6OeTrm6Zinq4ZlzNP9WGae7pcY5umYp2Oejnm6\naljGPN2PZebpfolhno55OubpmKerhmXM0/1YZp7ulxjm6ZinY56OebpqWMY83Y9l5ul+iWGe\njnk65umYp6uGZczT/Vhmnu6XGObpmKdjno55umpYxjzdj2Xm6X6JYZ6uOnvM/1V7/tAa+5/z\n5f8hv1zd1kN18q8/KvtPxyr/6778P+aR/30gWU16/g+j5T+Nbz85ORISdb+JrirpfxuCVKc9\n/xubs4ZUQ4nS/1ZD9KxKOxb91Ch9JKIfKdFPvVLDS5VLb1/0U/sHcmXtJCmtRevqUH0pqleT\n9lWbpyPN08F+sLwGr7wW1cX+JamMdtambVC3Du0H+8N7wXb1/tKmzl/0a/L6rsXrW+ovdZJ/\nKa/5l3Fx/ur+pQ77r/WXdngfPzN/Pzsvf2eef/b5/sx6YeuKrSu2rti6YuuKrSu2rti6YuuK\nrSu2rti6YuuKrSu2rti6+lPr6t/R35+835+d5z+9rv70evnZdfpPras/vV7YumLriq0rtq7Y\numLriq0rtq7Yuvqz66o++2E/7OdXf6RL95OkBP1Exd56trW9m4iTKauln54o9u2vSPma/RX7\nKnGCkmLfAZwwQLHvQE4YqNh3ECcMUuw7mBMGK/YdwglDFPsqc4KyYl8VFGqplA6KkrSOtYUj\nz9aaVvYWbmgqdwPTLazcnVxF3FcRUDQSIYYjOI9dleGqNApSYVG/AZEq4Pt+peRExU4gNEpq\n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\nbmeR3L/un+Z/Kq3H909V5KO43zek319VqofnxCryllW+H8b4EH//wuJf98e1w+9Xeb93wNXj\nOWBSJfVunmJKv3+tcryN4vwhP85nlFFGGWWU0f8ElaghIVP6725ISEvUFUnSSopKAxjPeMYz\nnvGMZzzjGc94xjOe8YxnPOMZz3jGM57xjGc84xnPeMYznvGMZzzjGc94xjOe8YxnPOMZz3jG\nM57xjGc84xnPeMYznvGMZ/z/HD+Q8YxnPOMZz3jGM57xjGc84xnPeMYznvGMZzzjGc94xjOe\n8YxnPOMZz3jGM57xjP9/wFeHb3UYz3jGM57x/3m+OvggxjOe8X+HryHRqPT/S4FdKyRKrz9G\nV3n+Wep78c/S+VF/lnp4/lm6+PmfpZYBf5Z6jf2zdF7Un6XOcn+Wbi3+s3Qz/Fk66w/TlTZ/\nlu5u/Wcpw6vfowyvfo8yvPo9yvDq9yjDq9+jDK9+jzK8+j3K8Or3KMOr36MMr36PMrz6Pcrw\n6vcow6vfowyvfo8yvPo9yvDq9yjDq9+jDK9+jzK8+j3K8Or3KMOr36MMr36PMrz6Pcrw6vco\nw6vfowyvfo/+abzyE/xZuvzYn6U+zf8snSPzZ+ki5z9LFxT+WTpZ+GepV8ifpe4Sf5aa/WHq\n6ftn6fqSP0tdo/4sXWrzZ+kOjz9LGV79HmV49XuU4dXvUYZXv0cZXv0eZXj1e5Th1e9Rhle/\nRxle/R5lePV7lOHV71GGV79HGV79HmV49XuU4dVvUfJcglFGGWWUUUb/4xT/3Q2SHPpEplO4\nE4myXWivFdCfRH2QmzGieCrxH+fzTDfahyS+l+w45s1dsu3Gp2GNej0hx6L6dTppUkiyO7U9\nXtToGjm2QaNLkzXZJHZIlGG9ghbkqMbAee/v+5Gsg6kmKs4ZJLNFacEDEp28VEbP3oNkvh/Q\n6LbJM5KSaO4y22EQiTleuPBUkyNkL20X62F6VL7XBrLVuf6EkJUGJOlxXel++2cSr7efCk18\nLEhe3fF7mn6LJDEHR3b9NqkTObA/pVHvbgYkpmjWFS3LtSRxXrOQDdaZZGeDTR+GF48i2XID\nVgbtziN5Fxx6rpNPIAnHRk58KuVHMrfdrPm1oB4Jt+iY4/JAmSR6H5Lp99aGZN7cMy9u1jKS\nTMsDP8/o4LWwLcmh7YR5Lnopl4eR7Z8G9sjeO48chaT5h04Hkujr3XeuGdyGRFt5LNjX8QbJ\n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\nLWV2K/eSYpJlu/HVtdpjiS/FqbxmpcDUlBzsYPSkoN4jkvFN8ZldnxbcOCkJ+cFWLZxI3vx1\ngma2myrEg1vo/t9ROLH4cmd7kjRZt2Vbt+3f45gnNx6fCH5HTuffD7jZri8pSHCZOdGjFclq\n33vct9N7KvR3kuLRKhpH0XiJqw8IXVrPRmYfyad4nkb1Mc7K7lDGcDiIeHT83jo/jfamZHt5\nnOL6PbQKOue1DSI5UqMuL+mnWaE+kcZXohBqzP0vct/bieMoTvZDvKK4dMpUP2rXvLckp+u7\nl/3nWSKecfqIR2Xw0+Y0OYPxBy9+ChTL38eheMWPr04dnbB9ZcFdTs9fHiaN0FEkXhSf8rL0\nVIa6qZOEGQ2H3xbFoScvJ7/ZXdODHLWc0mqIX4X3/Vx8lEnlHIo/iFuIT0WUxtH6QN77MCGl\nCRSn6HmPHKf3m1T+/Mc/D1bAu6Tj7wqKDR6TDBonFYQa3mpaYEF2vp3kd/zdSZL5eNixZmPz\nufahffXnfYCO5FjbMqAiQnX7eYvO7apwv1tonIU4lTxDf2ni2WEkiOJV9slgKZfQWeSMdrau\nTNMp5OSYPkfdXqqI/Hl/s8+bTCv0V3j/Zp3NRffIFopHObz4aT3Fq9O0PppS1M9t/865Z+tz\neJ4jmWVh0mKyV16voVE7byJs2Thg+qvtJHpO3dCivvVJlBinuP6zadx1CgruKdhVyMdw8XJh\nxiARQiVy5UFiHCKZL8oAjcO1U/R9uyeNyzD+ijkpIzoRVuw/p+OOq8MbhJATpWFX+mp+fQX9\nG3LDI2dtlSa5xbbd7Lx2V6l/KVJ31thp40iGopzpdtX2FepP0zjrUM9F/dsoPKm0H8SHGxmC\nUQfaV/7eL4fGNfmtP2Rs3tWmUj2KS5XWn6DxVTHFsbzTqtmDTYeSC0vvfnO/sq3SdqdXj7fz\n72VdaX227GjrYL/T5IThTAedsHiuXNhud8NhqjU4+UzMeK28id+/p7jgUwZQlfabK8apSuvP\niuMtTi6ol7Fb9AfxrLJ2nH6ElvGLNDvRebRlaWBVjyu/Y1x2VdouK0P98rPWe0mKGHe48uNV\njUj1inntKv0Ci9YXlb8fxK9K5ZMU747XObi5X7I3KW4xeL57RFCl/Z8aP66PadDrSutTnijt\nae1jV1U+ihRo1Lo17qEiKSk9FuYKK9XDc2L2R8mEKQrDK9WLEONUpfUU18itsvSVMikU41Jl\n+ly7czQOO+r3LrnLpQrrmhQ66naukfGaRO0o+0W1CvW5NO7Ka7RIdELcWeV4N8Q490//3jWj\njDLKKKP/P6mEhHRpLCYpIS1R+o6npqOFg3Xpxwoyop+6tLC2g7WF2yxXayo2srKxcLWwcrd2\ntXVzt7WipfVKS6fOtrCfhXpSlraOlG04x9p2ho279bSpoq6wsJGNk5uzrbuF/VQrp1mO7rRU\nep61hSvlG7s7lVajnhstluEaOlu7WlmLmpa/ibquTnMU8EYain5qeIj++vbt3VaxotQ3eoPY\noN40C3cLhemuoiYi6Wvpz/8Bs2RZSyr/AgA=","type":"binary"},{"name":"data/index_items_df.RData","content":"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","type":"binary"},{"name":"data/sampleData.csv","content":"year,characteristic,char_value,core,pathfinder,friction\r\n2021,size,small,10,15,20\r\n2022,size,small,11,17,23\r\n2023,size,small,12,19,26\r\n2024,size,small,13,21,29\r\n2021,size,medium,14,23,32\r\n2022,size,medium,15,25,35\r\n2023,size,medium,16,27,38\r\n2024,size,medium,17,29,41\r\n2021,size,large,18,31,44\r\n2022,size,large,19,33,47\r\n2023,size,large,20,35,50\r\n2024,size,large,21,37,53\r\n2021,Overall,Overall,10,15,20\r\n2022,Overall,Overall,11,17,23\r\n2023,Overall,Overall,12,19,26\r\n2024,Overall,Overall,13,21,29\r\n","type":"text"},{"name":"data/sampleDataDistribution.csv","content":"year,topPercBin,char,char_value,core,pathfinder,friction\r\n2023,10,size,small,10,15,20\r\n2023,20,size,small,11,17,23\r\n2023,30,size,small,12,19,26\r\n2023,40,size,small,13,21,29\r\n2023,50,size,small,14,23,32\r\n2023,60,size,small,15,25,35\r\n2023,70,size,small,16,27,38\r\n2023,80,size,small,17,29,41\r\n2023,90,size,small,18,31,44\r\n2023,100,size,small,19,33,47\r\n2023,Mean,size,small,11,17,23\r\n2023,10,size,medium,20,35,50\r\n2023,20,size,medium,21,37,53\r\n2023,30,size,medium,10,15,20\r\n2023,40,size,medium,11,17,23\r\n2023,50,size,medium,12,19,26\r\n2023,60,size,medium,13,21,29\r\n2023,70,size,medium,10,15,20\r\n2023,80,size,medium,11,17,23\r\n2023,90,size,medium,12,19,26\r\n2023,100,size,medium,13,21,29\r\n2023,Mean,size,medium,11,17,23\r\n2023,10,size,large,14,23,32\r\n2023,20,size,large,15,25,35\r\n2023,30,size,large,16,27,38\r\n2023,40,size,large,17,29,41\r\n2023,50,size,large,18,31,44\r\n2023,60,size,large,19,33,47\r\n2023,70,size,large,20,35,50\r\n2023,80,size,large,21,37,53\r\n2023,90,size,large,10,15,20\r\n2023,100,size,large,11,17,23\r\n2023,Mean,size,large,11,17,23\r\n","type":"text"},{"name":"data/trend_df.RData","content":"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","type":"binary"},{"name":"graphs.R","content":"library(tidyr)\r\nlibrary(ggrepel)\r\n\r\nhello_world <- function() {\r\n  print(\"Hello, World!\")\r\n}\r\nx_limits <- c(\"2021\", \"2022\", \"2023\", \"2024\")\r\n\r\ntrendline <-function(index, dataI, IndexComponent) {\r\n  \r\n  df<-dataI\r\n  if(index==\"Overall\") {\r\n    df<-subset(df, characteristic==\"Overall\", select=c(Core,CorePlus,Friction, year))\r\n    df_long <- pivot_longer(df, cols = c(Core,CorePlus,Friction), names_to = \"variable\", values_to = \"value\")\r\n    legendLabels <- IndexComponent$Index[IndexComponent$Index %in% c(\"Core\", \"Pathfinder\", \"Friction\")]\r\n    legendLabels<-unique(legendLabels)\r\n  }\r\n  else if (index==\"Core\") {\r\n    df<-subset(df, characteristic==\"Overall\", select=c(ClinInteropFx,DataUse,breadth_of_exchange, year))\r\n    df<-df%>%\r\n      rename(\"Clinical Interoperability\"=ClinInteropFx,\r\n             \"Data Availability & Use\"=DataUse,\r\n             \"Breadth of Exchange\"=breadth_of_exchange)\r\n    \r\n    df_long <- pivot_longer(df, cols = c(\"Clinical Interoperability\",\"Data Availability & Use\",\"Breadth of Exchange\")\r\n                            , names_to = \"variable\", values_to = \"value\")\r\n      }\r\n  \r\n  else if (index==\"Pathfinder\") {\r\n    df<-subset(df, characteristic==\"Overall\", select=c(PublicHealth,SDOH,API,PatientEngagement, year))\r\n    \r\n    df<-df%>%\r\n      rename(\"Public Health\"=PublicHealth,\r\n             \"Social Determinants of Health\"=SDOH,\r\n             \"Clinician/Health System API\"=API,\r\n             \"Patient Engagement\"=PatientEngagement)\r\n    df_long <- pivot_longer(df, cols = c(\"Public Health\",\"Social Determinants of Health\",\"Clinician/Health System API\",\"Patient Engagement\"),\r\n                            names_to = \"variable\", values_to = \"value\")\r\n      }\r\n  \r\n  else if (index==\"Friction\") {\r\n    df<-subset(df, characteristic==\"Overall\", select=c(Barriers,Methods,InfoBlocking,year))\r\n    \r\n    df<-df%>%\r\n      rename(\"Barriers to Exchange\"=Barriers,\r\n             \"Multiple Methods to Exchange\"=Methods,\r\n             \"Information Blocking\"=InfoBlocking)\r\n\r\n    df_long <- pivot_longer(df, cols = c(\"Barriers to Exchange\",\"Multiple Methods to Exchange\",\"Information Blocking\"), names_to = \"variable\", values_to = \"value\")\r\n      }\r\n\r\ndf_long<-df_long[!is.na(df_long$value),]\r\n  ggplot(df_long, aes(x = year, y = value, color = variable, group = variable)) +\r\n    geom_line(size = 1.2) +\r\n    geom_point(shape = 15, size = 3) +  # shape 15 = square\r\n    geom_text_repel(aes(label = round(value)), vjust = -0.8, size = 6, show.legend = FALSE, color=\"black\") +  # Add data labels\r\n    labs(title = paste(index, \"Index Trend Over Time\"),\r\n         x = \"Year\",\r\n         y = \"Index Score\",\r\n         color = NULL) +\r\n    scale_x_discrete(limits = x_limits) +\r\n    scale_y_continuous(limits = c(0,100), expand=c(0,0)) +\r\n    scale_color_manual(values = c(\"red\", \"blue\", \"green\", \"yellow\")) +\r\n    theme_minimal(base_size=16) +\r\n    theme(legend.position = \"bottom\")\r\n}\r\n\r\n\r\ntrendline_characteristic <-function(indexInput, compInput, charInput, dataInput, IndexComponent) {\r\n  df<-dataInput\r\n  legendTitle<-LegendTitle(charInput)\r\n\r\n  #Replace component with index value if it is composite for graphing.  \r\n    if (compInput==\"Composite\") {\r\n    compInput = indexInput\r\n    }\r\n  \r\n  #Rename component if overall graph. \r\n  #The Overall input is only set to look across indices, not hospital characteristics. \r\n  #Input gets reset to Core.\r\n  if(indexInput==\"Overall\") {\r\n    compInput=\"Core\"\r\n  }\r\n  \r\n  \r\n  graphTitle<-indexInput\r\n  print(compInput)\r\n  if(compInput!=indexInput) {\r\n    graphTitle <- IndexComponent$Label[IndexComponent$Component==compInput]\r\n  } \r\n  \r\n  if (compInput==\"CorePlus\") {\r\n    graphTitle<-\"Pathfinder\"\r\n  }\r\n  \r\n  df<-df[!is.na(df[[compInput]]),]\r\n  \r\np<-ggplot(subset(df, characteristic==charInput), aes(x = year, y = .data[[compInput]], color = char_value, group = char_value)) +\r\n    geom_line(size = 1.2) +\r\n    geom_point(shape = 15, size = 3) +  # shape 15 = square\r\n    geom_text_repel(aes(label = round(.data[[compInput]])), vjust = -0.8, size = 6, show.legend = FALSE, color=\"black\") +  # Add data labels\r\n    labs(title = paste(graphTitle, \"Index by\", legendTitle),\r\n         x = \"Year\",\r\n         y = \"Index Score\",\r\n         color = legendTitle) +\r\n    scale_y_continuous(limits = c(0,100), expand=c(0,0)) +\r\n    theme_minimal(base_size=16) +\r\n    theme(legend.position = \"bottom\")\r\n\r\n# Adjust legend labels based on charInput\r\nif (charInput %in% c(\"sysMemb\", \"cah\")) {\r\n  p <- p + scale_color_manual(values = c(\"0\" = \"#1f77b4\", \"1\" = \"#ff7f0e\"),\r\n                              labels = c(\"0\" = \"No\", \"1\" = \"Yes\"))\r\n} else if (charInput == \"hospSize\") {\r\n  p <- p + scale_color_manual(values = c(\"0\" = \"#1f77b4\", \"1\" = \"#ff7f0e\", \"2\" = \"#2ca02c\"),\r\n                              labels = c(\"0\" = \"Small\", \"1\" = \"Medium\", \"2\" = \"Large\"))\r\n}\r\n\r\nreturn(p)\r\n}\r\n\r\n#trendline(\"friction\", \"Overall\")\r\n\r\ndistribution<-function(value, charInput, dataI, IndexComponent) {\r\n# Subset for the bar plot (excluding \"Mean\" bin)\r\nlegendTitle<-LegendTitle(charInput)\r\ndf_bars <- subset(dataI, characteristic == charInput & measure == value & bin != \"Mean\")\r\n\r\n# Subset for the mean line and label (bin == \"Mean\")\r\ndf_mean <- subset(dataI, characteristic == charInput & measure == value & bin == \"Mean\")\r\n\r\n\r\n#Create Graph Title\r\ngraphTitle<-value\r\nprint(value)\r\n\r\nif (value %in% IndexComponent$Component) {\r\n  graphTitle <- IndexComponent$Label[IndexComponent$Component==value]\r\n} else if(value==\"CorePlus\") {\r\n  graphTitle<-\"Pathfinder\"\r\n} else {\r\n  graphTitle<-value\r\n}\r\n\r\n\r\n# Create a named vector for facet labels\r\nif (charInput %in% c(\"sysMemb\", \"cah\")) {\r\n  facet_labels <- c(\"0\" = \"No\", \"1\" = \"Yes\")\r\n} else if (charInput == \"hospSize\") {\r\n  facet_labels <- c(\"0\" = \"Small\", \"1\" = \"Medium\", \"2\" = \"Large\")\r\n} else {\r\n  facet_labels <- NULL  # Default to showing raw values if no mapping provided\r\n}\r\n\r\n# Custom labeller for facets\r\nfacet_labeller <- labeller(char_value = facet_labels)\r\n\r\n\r\np<-ggplot(df_bars, aes(y = hospital_percent, x = bin)) +\r\n  geom_bar(stat = \"identity\") +\r\n  geom_vline(data = df_mean, aes(xintercept = weighted_mean / 10), \r\n             color = \"red\", linetype = \"dashed\", linewidth = 1) +\r\n  geom_text(data = subset(df_bars, hospital_percent > 0),\r\n            aes(label = paste0(round(hospital_percent * 100), \"%\")), \r\n            vjust = -0.8, size = 3, show.legend = FALSE) + \r\n  scale_y_continuous(labels = scales::percent_format(accuracy = 1), expand=c(0,0)) +\r\n\r\n  facet_grid(rows = vars(char_value), labeller = facet_labeller) +\r\n  # Add mean label near the vertical line\r\n  geom_text(\r\n    data = df_mean,\r\n    aes(\r\n      x = weighted_mean / 10, \r\n      y = 0, \r\n      label = paste0(\"Mean: \", round(weighted_mean), \"%\")\r\n    ),\r\n    color = \"red\",\r\n    angle = 90,\r\n    vjust = -0.5,\r\n    hjust = -2\r\n  ) + \r\n  labs(title = paste(graphTitle, \"by\", legendTitle),\r\n       x = \"Score Range\",\r\n       y = \"Percent of Hospitals\",\r\n       color = legendTitle) +\r\n  theme_minimal(base_size=16)\r\n\r\nreturn(p)\r\n\r\n}\r\n\r\n\r\n\r\nLegendTitle<-function(charInput) {\r\n  charInputOptions<-c(\"hospSize\", \"cah\",\"sysMemb\",\"cbsatype\",\"ehr\")\r\n  charLabel<-c(\"Hospital Size\",\"Critical Access Status\", \"Hospital System Membership\",\"Location\",\"EHR System\")\r\n  labeldf<-data.frame(charLabel, charInputOptions)\r\n  legendTitle<-labeldf$charLabel[labeldf$charInputOptions==charInput]\r\n  return(legendTitle)\r\n}\r\n\r\n\r\n#ggplot(subset(distributionSummaryFinal, characteristic==\"hospSize\" & decile!=\"Mean\"), aes(x=factor(decile), y=Core)) +\r\n#  geom_bar(stat = \"identity\") +\r\n#  geom_vline(data = subset(distributionSummaryFinal, characteristic==\"hospSize\" & decile==\"Mean\"), aes(xintercept = Core/10), \r\n#             color = \"red\", linetype = \"dashed\", linewidth = 1) +\r\n#  geom_text(aes(label = round(Core)), vjust = -0.8, size = 3, show.legend = FALSE) + # Add data labels\r\n#  facet_grid(rows = vars(char_value))\r\n\r\n","type":"text"}]
